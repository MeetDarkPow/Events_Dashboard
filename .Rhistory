e_charts(Year) %>%
e_bar(serie = count) %>%
e_title(text = "satRdays Events",
subtext = "Timeline",
sublink = "#",
left = "left", top = 4
) %>%
e_y_axis(
splitArea = list(show = TRUE),
axisPointer = list(      show = FALSE,
lineStyle = list(
color = "#999999",
width = 0.75,
type = "dotted"
))
) %>%
e_x_axis(splitArea = list(show = TRUE),
splitLine = list(show = TRUE),
axisLabel= list(rotate = 30,interval = 0)) %>%
e_toolbox_feature(feature = "magicType",
type = list("area", "line", "bar")) %>%
e_toolbox_feature("restore") %>%
e_toolbox_feature(feature = "reset") %>%
e_toolbox_feature("dataView") %>%
e_toolbox_feature("saveAsImage") %>%
e_animation(duration = 1000) %>%
e_tooltip(trigger = "axis") %>% e_color(mycolor)
mycolor <- c("#ffa600","#003636","#a9a9a9", "#91c8c8")
satrday_quarter %>%
e_charts(Quarter) %>%
e_line(serie = count) %>%
e_title(text = "Quarter-wise satRdays Events",
subtext = "Q1:Jan-Mar; Q2: Apr-Jun; Q3: Jul-Sep; Q4: Oct-Dec",
sublink = "#",
left = "left", top = 4) %>%
e_y_axis(
splitArea = list(show = TRUE),
axisPointer = list( show = FALSE,
lineStyle = list(
color = "#999999",
width = 0.75,
type = "dotted"))) %>%
e_x_axis(splitArea = list(show = TRUE),
splitLine = list(show = TRUE),
axisLabel= list(rotate = 30,interval = 0)) %>%
e_toolbox_feature(feature = "magicType",
type = list("area", "line", "bar")) %>%
e_toolbox_feature("restore") %>%
e_toolbox_feature(feature = "reset") %>%
e_toolbox_feature("dataView") %>%
e_toolbox_feature("saveAsImage") %>%
e_animation(duration = 1000) %>%
e_tooltip(trigger = "axis") %>% e_color(mycolor)
mycolor <- c("#ffa600","#003636","#a9a9a9", "#91c8c8")
satrday_quarter %>%
e_charts(Quarter) %>%
e_line(serie = count) %>%
e_title(text = "Quarter-wise satRdays Events",
subtext = "Q1:Jan-Mar; Q2: Apr-Jun; Q3: Jul-Sep; Q4: Oct-Dec",
sublink = "#",
left = "left", top = 4) %>%
e_y_axis(
splitArea = list(show = TRUE),
axisPointer = list( show = FALSE,
lineStyle = list(
color = "#999999",
width = 0.75,
type = "dotted"))) %>%
e_x_axis(splitArea = list(show = TRUE),
splitLine = list(show = TRUE),
axisLabel= list(rotate = 30,interval = 0)) %>%
e_toolbox_feature(feature = "magicType",
type = list("area", "line", "bar")) %>%
e_toolbox_feature("restore") %>%
e_toolbox_feature(feature = "reset") %>%
e_toolbox_feature("dataView") %>%
e_toolbox_feature("saveAsImage") %>%
e_animation(duration = 1000) %>%
e_tooltip(trigger = "axis") %>% e_color(mycolor)
satrday_quarter %>%
e_charts(Quarter) %>%
e_line(serie = count) %>%
e_title(text = "Quarter-wise satRdays Events",
subtext = "Q1: Jan-Mar || Q2: Apr-Jun || Q3: Jul-Sep || Q4: Oct-Dec",
sublink = "#",
left = "left", top = 4) %>%
e_y_axis(
splitArea = list(show = TRUE),
axisPointer = list( show = FALSE,
lineStyle = list(
color = "#999999",
width = 0.75,
type = "dotted"))) %>%
e_x_axis(splitArea = list(show = TRUE),
splitLine = list(show = TRUE),
axisLabel= list(rotate = 30,interval = 0)) %>%
e_toolbox_feature(feature = "magicType",
type = list("area", "line", "bar")) %>%
e_toolbox_feature("restore") %>%
e_toolbox_feature(feature = "reset") %>%
e_toolbox_feature("dataView") %>%
e_toolbox_feature("saveAsImage") %>%
e_animation(duration = 1000) %>%
e_tooltip(trigger = "axis") %>% e_color(mycolor)
satrday_quarter %>%
e_charts(Quarter) %>%
e_line(serie = count) %>%
e_title(text = "Quarter-wise satRdays Events from 2016-2020",
subtext = "Q1: Jan-Mar || Q2: Apr-Jun || Q3: Jul-Sep || Q4: Oct-Dec",
sublink = "#",
left = "left", top = 4) %>%
e_y_axis(
splitArea = list(show = TRUE),
axisPointer = list( show = FALSE,
lineStyle = list(
color = "#999999",
width = 0.75,
type = "dotted"))) %>%
e_x_axis(splitArea = list(show = TRUE),
splitLine = list(show = TRUE),
axisLabel= list(rotate = 30,interval = 0)) %>%
e_toolbox_feature(feature = "magicType",
type = list("area", "line", "bar")) %>%
e_toolbox_feature("restore") %>%
e_toolbox_feature(feature = "reset") %>%
e_toolbox_feature("dataView") %>%
e_toolbox_feature("saveAsImage") %>%
e_animation(duration = 1000) %>%
e_tooltip(trigger = "axis") %>% e_color(mycolor)
top_destinations <- flights %>%
count(dest) %>%
top_n(15, n) %>%
arrange(n)
install.packages("nycflights13")
library(nycflights13)
top_destinations <- flights %>%
count(dest) %>%
top_n(15, n) %>%
arrange(n)
View(top_destinations)
satrday_continent %>%
e_charts(x = Continent) %>%
e_bar(count, legend = FALSE, name = "Events Count") %>%
e_labels(position = "right") %>%
e_tooltip() %>%
e_title("satRdays Events Distribution from 2016-2020", "Continents") %>%
e_flip_coords() %>%
e_y_axis(splitLine = list(show = FALSE)) %>%
e_x_axis(show = FALSE) %>%
e_toolbox_feature(
feature = "saveAsImage",
title = "Save as image"
)
satrday_continent %>%
e_charts(x = Continent) %>%
e_bar(count, legend = FALSE, name = "Events Count") %>%
e_labels(position = "right") %>%
e_tooltip() %>%
e_title("satRdays Events Distribution from 2016-2020", "Continents") %>%
e_flip_coords() %>%
e_y_axis(splitLine = list(show = FALSE)) %>%
e_x_axis(show = FALSE) %>%
e_toolbox_feature("dataView") %>%
e_toolbox_feature(
feature = "saveAsImage",
title = "Save as image"
)
satrday_continent %>%
count(Continent) %>%
top(count) %>%
arrange(count)
satrday_continent %>%
count(Continent) %>%
top_n(count) %>%
arrange(count)
satrday_continent %>%
count(Continent) %>%
top_n(8, count) %>%
arrange(count)
satrday_continent %>%
count(Continent) %>%
top_n(6, count) %>%
arrange(count)
satrday_continent[order(-count),]
satrday_continent[with(satrday_continent, order(-count)), ]
satrday_continent <- satrday_continent[with(satrday_continent, order(-count)), ]
satrday_continent %>%
e_charts(x = Continent) %>%
e_bar(count, legend = FALSE, name = "Events Count") %>%
e_labels(position = "right") %>%
e_tooltip() %>%
e_title("satRdays Events Distribution from 2016-2020", "Continents") %>%
e_flip_coords() %>%
e_y_axis(splitLine = list(show = FALSE)) %>%
e_x_axis(show = FALSE) %>%
e_toolbox_feature("dataView") %>%
e_toolbox_feature(
feature = "saveAsImage",
title = "Save as image"
)
satrday_continent <- satrday_continent[with(satrday_continent, order(count)), ]
satrday_continent %>%
e_charts(x = Continent) %>%
e_bar(count, legend = FALSE, name = "Events Count") %>%
e_labels(position = "right") %>%
e_tooltip() %>%
e_title("satRdays Events Distribution from 2016-2020", "Continents") %>%
e_flip_coords() %>%
e_y_axis(splitLine = list(show = FALSE)) %>%
e_x_axis(show = FALSE) %>%
e_toolbox_feature("dataView") %>%
e_toolbox_feature(
feature = "saveAsImage",
title = "Save as image"
)
library(DT)
datatable(satrday_country)
as.matrix(satrday_country)
datatable(as.matrix(satrday_country))
datatable(satrday_country, rownames = FALSE, colnames=c('Country','Frequency'),
extensions = 'FixedColumns', escape=TRUE,
options= list(bPaginate = FALSE, dom = 't',buttons = c('excel')))
satrday_country <- satrday_country[with(satrday_country, order(count)), ]
satrday_country <- satrday_country[with(satrday_country, order(-count)), ]
datatable(satrday_country, rownames = FALSE, colnames=c('Country','Frequency'),
extensions = 'FixedColumns', escape=TRUE,
options= list(bPaginate = FALSE, dom = 't',buttons = c('excel')))
datatable(satrday_country,
filter = "top",
extensions = c(
"Buttons",
"Scroller"
)
style = "bootstrap",
class = "compact",
rownames = FALSE, colnames=c('Country','Frequency'),
extensions = 'FixedColumns', escape=TRUE,
options= list(bPaginate = FALSE, dom = 'Blrtip',buttons = c('csv','excel')))
datatable(satrday_country,
filter = "top",
extensions = c(
"Buttons",
"Scroller"
),
style = "bootstrap",
class = "compact",
rownames = FALSE, colnames=c('Country','Frequency'),
extensions = 'FixedColumns', escape=TRUE,
options= list(bPaginate = FALSE, dom = 'Blrtip',buttons = c('csv','excel')))
datatable(satrday_country, filter = "top",
extensions = c(
"Buttons",
"Scroller"
),
rownames = FALSE,
style = "bootstrap",
class = "compact",
width = "auto",
options = list(
dom = "Blrtip",
deferRender = TRUE,
scrollY = 300,
scroller = TRUE,
buttons = list(
"csv",
"excel"
)
),
colnames = c(
"Frequency" = "count",
))
datatable(satrday_country, filter = "top",
extensions = c(
"Buttons",
"Scroller"
),
rownames = FALSE,
style = "bootstrap",
class = "compact",
width = "auto",
options = list(
dom = "Blrtip",
deferRender = TRUE,
scrollY = 300,
scroller = TRUE,
buttons = list(
"csv",
"excel"
)
),
colnames = c(
"Frequency" = "count"
))
datatable(satrday_country, filter = "top",
extensions = c(
"Buttons",
"Scroller"
),
rownames = FALSE,
style = "bootstrap",
class = "compact",
width = "auto",
options = list(
dom = "Blrtip",
deferRender = TRUE,
scroller = TRUE,
buttons = list(
"csv",
"excel"
)
),
colnames = c(
"Frequency" = "count"
))
datatable(satrday_country, filter = "top",
extensions = c(
"Buttons",
"Scroller"
),
rownames = FALSE,
style = "bootstrap",
class = "compact",
width = "auto",
options = list(
dom = "Blrtip",
deferRender = TRUE,
buttons = list(
"csv",
"excel"
)
),
colnames = c(
"Frequency" = "count"
))
satrday_city <- satrday_city[with(satrday_city, order(-count)), ]
datatable(satrday_city, filter = "top",
extensions = c(
"Buttons",
"Scroller"
),
rownames = FALSE,
style = "bootstrap",
class = "compact",
width = "auto",
options = list(
dom = "Blrtip",
deferRender = TRUE,
buttons = list(
"csv",
"excel"
)
),
colnames = c(
"Frequency" = "count"
))
library(flexdashboard)
library(dplyr)
library(DT)
library(echarts4r)
source("satRdays.R")
datatable(sponsordf, filter = "top",
extensions = c(
"Buttons",
"Scroller"),
rownames = FALSE,
style = "bootstrap",
class = "compact",
width = "auto",
options = list(
dom = "Blrtip",
deferRender = TRUE,
buttons = list(
"csv",
"excel")),
colnames = c(
"Sponsors" = "sponsor_name",
"Frequency of Sponsorship" = Freq
))
datatable(sponsordf, filter = "top",
extensions = c(
"Buttons",
"Scroller"),
rownames = FALSE,
style = "bootstrap",
class = "compact",
width = "auto",
options = list(
dom = "Blrtip",
deferRender = TRUE,
buttons = list(
"csv",
"excel")),
colnames = c(
"Sponsors" = "sponsor_name",
"Frequency of Sponsorship" = "Freq"
))
datatable(sponsordf, filter = "top",
extensions = c(
"Buttons",
"Scroller"),
rownames = FALSE,
style = "bootstrap",
class = "compact",
width = "auto",
options = list(
dom = "Blrtip",
deferRender = TRUE,
buttons = list(
"csv",
"excel")),
colnames = c(
"Sponsors" = "sponsor_name",
"Frequency of Sponsorship" = "Freq"
))
datatable(sponsordf, filter = "top",
extensions = c(
"Buttons",
"Scroller"),
rownames = FALSE,
style = "bootstrap",
class = "compact",
width = "auto",
options = list(
dom = "Blrtip",
deferRender = TRUE,
buttons = list(
"csv",
"excel")),
colnames = c(
"Sponsors" = "sponsor_name",
"Frequency of Sponsorship" = "Freq"
))
datatable(sponsordf, filter = "top",
extensions = c(
"Buttons",
"Scroller"),
rownames = FALSE,
style = "bootstrap",
class = "compact",
width = "auto",
options = list(
dom = "Blrtip",
deferRender = TRUE,
buttons = list(
"csv",
"excel")),
colnames = c(
"Sponsors" = "sponsor_name",
"Frequency of Sponsorship" = "Freq"
))
rmarkdown::render("satRdays.Rmd")
rmarkdown::render("satRdays.Rmd")
rmarkdown::render("satRdays.Rmd")
rmarkdown::render("satRdays.Rmd")
rmarkdown::render("satRdays.Rmd")
rmarkdown::render("satRdays.Rmd")
rmarkdown::render("satRdays.Rmd")
library(flexdashboard)
library(dplyr)
library(DT)
options(DT.options = list(scrollY="250px",scrollX="50px", pageLength = 10, autoWidth = TRUE))
library(echarts4r)
source("satRdays.R")
valueBox(total_events, icon = "fa-calendar", color = "darkblue")
rmarkdown::render("satRdays.Rmd")
rmarkdown::render("satRdays.Rmd")
rmarkdown::render("satRdays.Rmd")
rmarkdown::render("satRdays.Rmd")
rmarkdown::render("satRdays.Rmd")
toString(satrday$Invited_Speakers)
View(satrday)
satrday$Invited_Speakers
satrday$Invited_Speakers[2:]
satrday$Invited_Speakers[2:nrow(satrday)]
satrday_speakers <- satrday$Invited_Speakers[2:nrow(satrday)]
speakerlist <- paste(satrday_speakers, collapse = ",")
speakervector <- strsplit(speakerlist, ",")[[1]]
speakertable <- table(trimws(speakervector))
speakerdf <- as.data.frame(speakertable)
colnames(sponsordf) <- c("Speaker", "Freq")
View(speakerdf)
colnames(speakerdf) <- c("Speaker", "Freq")
number_of_speakers <- length(sponsordf$sponsor_name)
satrday_speakers <- satrday$Invited_Speakers[2:nrow(satrday)]
speakerlist <- paste(satrday_speakers, collapse = ",")
speakervector <- strsplit(speakerlist, ",")[[1]]
speakertable <- table(trimws(speakervector))
speakerdf <- as.data.frame(speakertable)
colnames(speakerdf) <- c("Speaker", "Freq")
number_of_speakers <- length(speakerdf$Speaker)
speakerdf <- speakerdf[order(speakerdf$Freq, decreasing = TRUE), ]
View(speakerdf)
rmarkdown::render("satRdays.Rmd")
datatable(speakerdf, filter = "top",
extensions = c(
"Buttons",
"Scroller"),
rownames = FALSE,
style = "bootstrap",
class = "compact",
width = "auto",
options = list(
dom = "Blrtip",
deferRender = TRUE,
buttons = list(
"csv",
"excel")),
colnames = c(
"Frequency of Participations" = "Freq"
))
rmarkdown::render("satRdays.Rmd")
rm(list = ls())
